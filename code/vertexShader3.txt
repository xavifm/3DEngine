#version 330

out vec4 FragPos;
out vec4 Normal;
out vec4 LightPos;
out vec2 fragmentUV;
in vec2 in_uvs;
uniform vec4 lightPos;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
in vec3 in_Position;
in vec3 in_Normal;
out vec4 vert_Normal;
uniform mat4 objMat;
uniform mat4 mv_Mat;
uniform mat4 mvpMat;

void main() {
	fragmentUV = in_uvs;
	gl_Position = mvpMat * objMat * vec4(in_Position, 1.0);
	vert_Normal = mv_Mat * objMat * vec4(in_Normal, 0.0);
	FragPos = mvpMat * objMat * vec4(in_Position, 1.0);
	Normal = mat4(transpose(inverse(mvpMat * objMat))) * vert_Normal;
	LightPos = mvpMat * lightPos;

}

